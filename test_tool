#!/usr/bin/env perl
use warnings;
use strict;
#
# Quick commandline tool to call the interface libraries and confirm that
# things work
#

# allow the libs to be in the bin dir
use FindBin;
use lib "$FindBin::RealBin/lib";
use lib "/home/hamish/s/bin/lib";

use Getopt::Long 2.33 qw(:config gnu_getopt);
use Pod::Usage;

use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Quotekeys = 0;

use HC::CredentialStore;
use HC::Cache::Dir;
use REST::JSONRequest;
use CloudAtCost;


my $option = {
    preset   => 'cac',
    verbose  => 0,
};
my @option_list = (
    "preset|s=s",
    "credfile=s",
    "verbose|v+",
    "cachedir=s",
);

###############################################################################
##
## Standard options processor
sub do_options {
    my $option = shift;
    if (!GetOptions($option,@_)) {
        print("Options: ",join(", ",@_),"\n");
        pod2usage(2);
    }
    if ($option->{man}) {
        pod2usage(-exitstatus => 0, -verbose => 2);
    }

    if ($option->{quiet}) {
        delete $option->{verbose};
    }
}

###############################################################################

# FIXME - should this logic move into the cache package?
sub calculate_cachedir {
    if (defined($option->{cachedir})) {
        # manually setting it on the cmdline takes precedence
        return $option->{cachedir};
    }
    if (defined($ENV{'MUNIN_PLUGSTATE'})) {
        # if we are in a nagios environment, use the same dir
        return dirname($ENV{'MUNIN_PLUGSTATE'}).'/cloudatcost';
    }

    # finally, fall back to something in our home directory
    return $ENV{'HOME'}.'/.cache/cloudatcost';
}

sub show_result {
    my $cloudatcost = shift;
    my $result = shift;

    print "Main object: ",Dumper($cloudatcost),"\n";
    if (defined($result)) {
        print "Result object: ",Dumper($result),"\n";
    } else {
        print "error: ",
            $cloudatcost->error()," ",$cloudatcost->error_description,"\n";
    }
}

sub main() { 
    do_options($option,@option_list);
    return if (defined($option->{help}));

    my ($username,$key);
    if (defined($option->{credfile})) {
        my $cred = HC::CredentialStore->new($option->{credfile});
        die("credfile error") if (!defined($cred));

        ($username,$key) = $cred->lookup($option->{preset});
    }

    die "Need username credentials" if (!defined($username));
    die "Need key credentials" if (!defined($key));

    my $client = REST::JSONRequest->new();
    $client->set_urlprefix('https://panel.cloudatcost.com/');

    my $cache = HC::Cache::Dir->new();
    $cache->set_cachedir(calculate_cachedir());

    my $cloudatcost = CloudAtCost->new();
    $cloudatcost->set_Request($client);
    $cloudatcost->set_Cache($cache);
    $cloudatcost->set_credentials($username,$key);

    print "listservers:\n";
    my $servers = $cloudatcost->listservers();
    show_result($cloudatcost,$servers);

    print "resources:\n";
    my $resources = $cloudatcost->resources();
    show_result($cloudatcost,$resources);

    for my $name (qw(cpu ram storage)) {
        my $used = $resources->{used}{$name.'_used'};
        my $total = $resources->{total}{$name.'_total'};

        printf("%7s : %6i/%6i (%2.2f%%)\n",
            $name,
            $used,
            $total,
            ($used/$total)*100,
        );
    }

    print("\n");
    for my $server (@{$servers}) {
        printf("%s : cpu=%i / %i, ram=%2.2f / %iMB, storage=%2.2f / %iGB\n",
            $server->{hostname},
            $server->{cpuusage}, $server->{cpu},
            $server->{ramusage}*1000/1024, $server->{ram},
            $server->{hdusage}, $server->{storage},
        );

        # I saw the ramusage for one server be 524.29 out of 512, which is
        # suspiciously like they are counting in Kibibytes and then dividing
        # by one thousand ( 524.29*1000/1024 == 512.00 )

        # The cpuusage doesnt seem to be a percentage, but that is the only
        # thing that makes sense.  I need to do some more tests, but the
        # panel showed 3% cpu for a cpuusage value of 20 ?!?
    }
}
main();

